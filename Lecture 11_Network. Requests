{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "<>:15: SyntaxWarning: list indices must be integers or slices, not str; perhaps you missed a comma?\n",
      "<>:15: SyntaxWarning: list indices must be integers or slices, not str; perhaps you missed a comma?\n",
      "C:\\Users\\vplonsak\\AppData\\Local\\Temp\\ipykernel_2340\\352120390.py:15: SyntaxWarning: list indices must be integers or slices, not str; perhaps you missed a comma?\n",
      "  gif_links = [item[\"images\"][\"fixed_height\"][\"url\"] for item in data][\"data\"]\n"
     ]
    }
   ],
   "source": [
    "import requests\n",
    "\n",
    "def search_gifts(search_term, api_key, num_results=5):\n",
    "    base_url = \"https://api.giphy.com/v1/gifs/search\"\n",
    "    params = {\n",
    "        \"q\"\n",
    "        \"api_key\"\n",
    "        \"limit\": num_results\n",
    "    }\n",
    "\n",
    "    response = requests.get(base_url, params=params)\n",
    "    data = response.json()\n",
    "\n",
    "    if response.status_code == 200:\n",
    "        gif_links = [item[\"images\"][\"fixed_height\"][\"url\"] for item in data][\"data\"]\n",
    "        return gif_links\n",
    "    else:\n",
    "        print(\"Error:\", data.get(\"message\", \"Unknow error\"))\n",
    "        return []\n",
    "    \n",
    "def main():\n",
    "    api_key = \"BUpBPyy6D54bRN8OT5FjofusUQb1Ca2O\"\n",
    "    search_term = input(\"Enter the search term: \")\n",
    "\n",
    "    gif_links = search_gifs(search_term, api_key, num_results) \n",
    "\n",
    "    if gif_links:\n",
    "        print(\"Giphy Links GIFs:\")\n",
    "        for index, link in enumerate(gif_links, start=1):\n",
    "            print(f\"{index}. {link}\") \n",
    "\n",
    "    else:\n",
    "        print(\"No GIFs found.\")\n",
    "\n",
    "if __name__ == \"__mail__\":        \n",
    "    main()            "
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.11"
  },
  "orig_nbformat": 4
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
